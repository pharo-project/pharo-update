'From Pharo3.0 of 18 March 2013 [Latest update: #30290] on 22 July 2013 at 2:13:38 pm'!CollectionRootTest subclass: #SortedCollectionTest	uses: TIterateSequencedReadableTest + TPrintOnSequencedTest + TAsStringCommaAndDelimiterSequenceableTest + TIncludesWithIdentityCheckTest + (TSequencedElementAccessTest - {#testAtAll}) + TSubCollectionAccess + TIndexAccessForMultipliness + TRemoveTest + TConvertTest + TConvertAsSetForMultiplinessIdentityTest + TAddTest + TBeginsEndsWith + (TCopySequenceableSameContents - {#testShuffled}) + TSetArithmetic + TRemoveByIndexTest + TCopyPartOfSequenceable + TCopyPartOfSequenceableForMultipliness + (TCopySequenceableWithOrWithoutSpecificElements - {#testForceToPaddingStartWith. #testForceToPaddingWith. #testCopyWithFirst. #testCopyWithoutIndex}) + TCopySequenceableWithReplacementForSorted + TCopyTest + TConvertAsSortedTest + TSequencedStructuralEqualityTest + TCreationWithTest + TOccurrencesForMultiplinessTest	instanceVariableNames: 'nonEmpty elementExistsTwice empty collectResult nonEmpty1Element collectionOfFloat accessCollection elementNoteIn oldSubcollection floatCollectionSameEndAndBegining withoutEqualElements collectionOfFloatWithDuplicate collectionIncluded collectionNotIncluded collectionWithoutNil duplicateFloat nonEmpty5Elements collectionWith4Elements '	classVariableNames: ''	poolDictionaries: ''	category: 'CollectionsTests-Unordered'!EllipseMorph subclass: #CircleMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Base-Basic'!CollectionRootTest subclass: #SetTest	uses: TAddForUniquenessTest + TIncludesWithIdentityCheckTest + TCloneTest + TCopyTest + TRemoveTest + TGrowableTest + TStructuralEqualityTest + TPrintTest + TAsStringCommaAndDelimiterTest + TConvertTest + TConvertAsSortedTest + TConcatenationEqualElementsRemovedTest + TOccurrencesTest + (TCreationWithTest - {#testOfSize. #collectionClass}) + (TSetArithmetic - {#collectionClass})	instanceVariableNames: 'full empty collectResult emptyButAllocatedWith20 elementNotIn collectionOfFloat collectionIncluded nonEmpty1element withoutEqualElements collection5Elements collectionWith3Elements '	classVariableNames: ''	poolDictionaries: ''	category: 'CollectionsTests-Unordered'!UIManager subclass: #MorphicUIManager	uses: TEasilyThemed - {#theme}	instanceVariableNames: 'interactiveParser '	classVariableNames: 'UIProcess '	poolDictionaries: ''	category: 'Polymorph-Widgets-Themes'!CollectionRootTest subclass: #FloatArrayTest	uses: TCreationWithTest + TSequencedStructuralEqualityTest + TSequencedConcatenationTest + TSetArithmetic + TAsStringCommaAndDelimiterSequenceableTest + TPrintOnSequencedTest + TBeginsEndsWith + TCloneTest + (TConvertTest - {#testAsByteArray. #integerCollectionWithoutEqualElements}) + TConvertAsSortedTest + (TConvertAsSetForMultiplinessIdentityTest - {#testAsIdentitySetWithEqualsElements. #testAsIdentitySetWithIdentityEqualsElements}) + TCopyPartOfSequenceable + TCopyPartOfSequenceableForMultipliness + TCopySequenceableSameContents + TCopySequenceableWithOrWithoutSpecificElements + TCopySequenceableWithReplacement + TCopyTest + (TIncludesWithIdentityCheckTest - {#testIdentityIncludesNonSpecificComportement}) + (TIndexAccess - {#testIdentityIndexOf. #testIdentityIndexOfIAbsent}) + (TIndexAccessForMultipliness - {#testIdentityIndexOfIAbsentDuplicate. #testIdentityIndexOfDuplicate}) + TIterateSequencedReadableTest + TPutTest + TPutBasicTest + TReplacementSequencedTest + TSequencedElementAccessTest + TSortTest + TSubCollectionAccess	instanceVariableNames: 'nonEmpty5ElementsNoDuplicate empty elementNotIn elementTwiceIn collectionWithEqualElements nonEmpty1Element collectionWithSameAtEndAndBegining collectionWith1TimeSubcollection collectionWith2TimeSubcollection collectionNotIncluded nonEmptySubcollection elementInNonEmpty replacementCollectionSameSize sortedCollection '	classVariableNames: ''	poolDictionaries: ''	category: 'CollectionsTests-Arrayed'!FloatArrayTest removeSelector: #assertNoDuplicates:whenConvertedTo:!FloatArrayTest removeSelector: #assertNonDuplicatedContents:whenConvertedTo:!FloatArrayTest removeSelector: #assertSameContents:whenConvertedTo:!FloatArrayTest removeSelector: #collectionWithCopy!FloatArrayTest removeSelector: #collectionWithIdentical!FloatArrayTest removeSelector: #containsAll:of:andOf:!FloatArrayTest removeSelector: #elementInForReplacement!FloatArrayTest removeSelector: #firstIndexesOf:in:!FloatArrayTest removeSelector: #howMany:in:!FloatArrayTest removeSelector: #numberOfSimilarElementsInIntersection!FloatArrayTest removeSelector: #test0CopyTest!FloatArrayTest removeSelector: #test0FixtureAsSetForIdentityMultiplinessTest!FloatArrayTest removeSelector: #test0FixtureAsStringCommaAndDelimiterTest!FloatArrayTest removeSelector: #test0FixtureBeginsEndsWithTest!FloatArrayTest removeSelector: #test0FixtureCloneTest!FloatArrayTest removeSelector: #test0FixtureConverAsSortedTest!FloatArrayTest removeSelector: #test0FixtureCopyPartOfForMultipliness!FloatArrayTest removeSelector: #test0FixtureCopyPartOfSequenceableTest!FloatArrayTest removeSelector: #test0FixtureCopySameContentsTest!FloatArrayTest removeSelector: #test0FixtureCopyWithOrWithoutSpecificElementsTest!FloatArrayTest removeSelector: #test0FixtureCopyWithReplacementTest!FloatArrayTest removeSelector: #test0FixtureCreationWithTest!FloatArrayTest removeSelector: #test0FixtureEmptyTest!FloatArrayTest removeSelector: #test0FixtureIncludeTest!FloatArrayTest removeSelector: #test0FixtureIncludeWithIdentityTest!FloatArrayTest removeSelector: #test0FixtureIndexAccessFotMultipliness!FloatArrayTest removeSelector: #test0FixtureIndexAccessTest!FloatArrayTest removeSelector: #test0FixtureIterateSequencedReadableTest!FloatArrayTest removeSelector: #test0FixturePrintTest!FloatArrayTest removeSelector: #test0FixturePutOneOrMoreElementsTest!FloatArrayTest removeSelector: #test0FixturePutTest!FloatArrayTest removeSelector: #test0FixtureSequencedConcatenationTest!FloatArrayTest removeSelector: #test0FixtureSequencedElementAccessTest!FloatArrayTest removeSelector: #test0FixtureSetAritmeticTest!FloatArrayTest removeSelector: #test0FixtureSubcollectionAccessTest!FloatArrayTest removeSelector: #test0FixtureTConvertAsSetForMultiplinessTest!FloatArrayTest removeSelector: #test0FixtureTConvertTest!FloatArrayTest removeSelector: #test0SortingArrayedTest!FloatArrayTest removeSelector: #test0TSequencedStructuralEqualityTest!FloatArrayTest removeSelector: #test0TStructuralEqualityTest!FloatArrayTest removeSelector: #testAfter!FloatArrayTest removeSelector: #testAfterIfAbsent!FloatArrayTest removeSelector: #testAllButFirst!FloatArrayTest removeSelector: #testAllButFirstDo!FloatArrayTest removeSelector: #testAllButFirstNElements!FloatArrayTest removeSelector: #testAllButLast!FloatArrayTest removeSelector: #testAllButLastDo!FloatArrayTest removeSelector: #testAllButLastNElements!FloatArrayTest removeSelector: #testAsArray!FloatArrayTest removeSelector: #testAsBag!FloatArrayTest removeSelector: #testAsCommaStringEmpty!FloatArrayTest removeSelector: #testAsCommaStringMore!FloatArrayTest removeSelector: #testAsCommaStringOne!FloatArrayTest removeSelector: #testAsIdentitySet!FloatArrayTest removeSelector: #testAsIdentitySetWithoutIdentityEqualsElements!FloatArrayTest removeSelector: #testAsOrderedCollection!FloatArrayTest removeSelector: #testAsSet!FloatArrayTest removeSelector: #testAsSetWithEqualsElements!FloatArrayTest removeSelector: #testAsSortedCollection!FloatArrayTest removeSelector: #testAsSortedCollectionWithSortBlock!FloatArrayTest removeSelector: #testAsStringOnDelimiterEmpty!FloatArrayTest removeSelector: #testAsStringOnDelimiterLastEmpty!FloatArrayTest removeSelector: #testAsStringOnDelimiterLastMore!FloatArrayTest removeSelector: #testAsStringOnDelimiterLastOne!FloatArrayTest removeSelector: #testAsStringOnDelimiterMore!FloatArrayTest removeSelector: #testAsStringOnDelimiterOne!FloatArrayTest removeSelector: #testAt!FloatArrayTest removeSelector: #testAtAll!FloatArrayTest removeSelector: #testAtAllIndexesPut!FloatArrayTest removeSelector: #testAtAllPut!FloatArrayTest removeSelector: #testAtAllPutAll!FloatArrayTest removeSelector: #testAtIfAbsent!FloatArrayTest removeSelector: #testAtLast!FloatArrayTest removeSelector: #testAtLastError!FloatArrayTest removeSelector: #testAtLastIfAbsent!FloatArrayTest removeSelector: #testAtLastPut!FloatArrayTest removeSelector: #testAtOutOfBounds!FloatArrayTest removeSelector: #testAtPin!FloatArrayTest removeSelector: #testAtPut!FloatArrayTest removeSelector: #testAtPutOutOfBounds!FloatArrayTest removeSelector: #testAtPutTwoValues!FloatArrayTest removeSelector: #testAtRandom!FloatArrayTest removeSelector: #testAtWrap!FloatArrayTest removeSelector: #testAtWrapPut!FloatArrayTest removeSelector: #testBefore!FloatArrayTest removeSelector: #testBeforeIfAbsent!FloatArrayTest removeSelector: #testCollectFromTo!FloatArrayTest removeSelector: #testConcatenation!FloatArrayTest removeSelector: #testConcatenationWithEmpty!FloatArrayTest removeSelector: #testCopyAfter!FloatArrayTest removeSelector: #testCopyAfterEmpty!FloatArrayTest removeSelector: #testCopyAfterLast!FloatArrayTest removeSelector: #testCopyAfterLastEmpty!FloatArrayTest removeSelector: #testCopyAfterLastWithDuplicate!FloatArrayTest removeSelector: #testCopyAfterWithDuplicate!FloatArrayTest removeSelector: #testCopyCreatesNewObject!FloatArrayTest removeSelector: #testCopyEmpty!FloatArrayTest removeSelector: #testCopyEmptyMethod!FloatArrayTest removeSelector: #testCopyEmptyWith!FloatArrayTest removeSelector: #testCopyEmptyWithout!FloatArrayTest removeSelector: #testCopyEmptyWithoutAll!FloatArrayTest removeSelector: #testCopyEquals!FloatArrayTest removeSelector: #testCopyFromTo!FloatArrayTest removeSelector: #testCopyNonEmpty!FloatArrayTest removeSelector: #testCopyNonEmptyWith!FloatArrayTest removeSelector: #testCopyNonEmptyWithout!FloatArrayTest removeSelector: #testCopyNonEmptyWithoutAll!FloatArrayTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!FloatArrayTest removeSelector: #testCopyNonEmptyWithoutNotIncluded!FloatArrayTest removeSelector: #testCopyNotSame!FloatArrayTest removeSelector: #testCopyReplaceAllWith1Occurence!FloatArrayTest removeSelector: #testCopyReplaceAllWithManyOccurence!FloatArrayTest removeSelector: #testCopyReplaceFromToWith!FloatArrayTest removeSelector: #testCopyReplaceFromToWithInsertion!FloatArrayTest removeSelector: #testCopySameClass!FloatArrayTest removeSelector: #testCopyUpTo!FloatArrayTest removeSelector: #testCopyUpToEmpty!FloatArrayTest removeSelector: #testCopyUpToLast!FloatArrayTest removeSelector: #testCopyUpToLastEmpty!FloatArrayTest removeSelector: #testCopyUpToLastWithDuplicate!FloatArrayTest removeSelector: #testCopyUpToWithDuplicate!FloatArrayTest removeSelector: #testCopyWithFirst!FloatArrayTest removeSelector: #testCopyWithSequenceable!FloatArrayTest removeSelector: #testCopyWithoutFirst!FloatArrayTest removeSelector: #testCopyWithoutIndex!FloatArrayTest removeSelector: #testDetectSequenced!FloatArrayTest removeSelector: #testDifference!FloatArrayTest removeSelector: #testDifferenceWithNonNullIntersection!FloatArrayTest removeSelector: #testDifferenceWithSeparateCollection!FloatArrayTest removeSelector: #testDo!FloatArrayTest removeSelector: #testEqualSign!FloatArrayTest removeSelector: #testEqualSignForSequenceableCollections!FloatArrayTest removeSelector: #testEqualSignIsTrueForEmptyButNonIdenticalCollections!FloatArrayTest removeSelector: #testEqualSignIsTrueForNonIdenticalButEqualCollections!FloatArrayTest removeSelector: #testEqualSignOfIdenticalCollectionObjects!FloatArrayTest removeSelector: #testFindFirst!FloatArrayTest removeSelector: #testFindFirstNotIn!FloatArrayTest removeSelector: #testFindLast!FloatArrayTest removeSelector: #testFindLastNotIn!FloatArrayTest removeSelector: #testFirstNElements!FloatArrayTest removeSelector: #testFirstSecondThird!FloatArrayTest removeSelector: #testForceToPaddingStartWith!FloatArrayTest removeSelector: #testForceToPaddingWith!FloatArrayTest removeSelector: #testFromToDo!FloatArrayTest removeSelector: #testFromToPut!FloatArrayTest removeSelector: #testHasEqualElements!FloatArrayTest removeSelector: #testHasEqualElementsIsTrueForNonIdenticalButEqualCollections!FloatArrayTest removeSelector: #testHasEqualElementsOfIdenticalCollectionObjects!FloatArrayTest removeSelector: #testIdentityIncludes!FloatArrayTest removeSelector: #testIfEmpty!FloatArrayTest removeSelector: #testIfEmptyifNotEmpty!FloatArrayTest removeSelector: #testIfEmptyifNotEmptyDo!FloatArrayTest removeSelector: #testIfNotEmpty!FloatArrayTest removeSelector: #testIfNotEmptyDo!FloatArrayTest removeSelector: #testIfNotEmptyDoifNotEmpty!FloatArrayTest removeSelector: #testIfNotEmptyifEmpty!FloatArrayTest removeSelector: #testIncludesAllNoneThere!FloatArrayTest removeSelector: #testIncludesAnyAllThere!FloatArrayTest removeSelector: #testIncludesAnyNoneThere!FloatArrayTest removeSelector: #testIncludesElementIsNotThere!FloatArrayTest removeSelector: #testIncludesElementIsThere!FloatArrayTest removeSelector: #testIndexOf!FloatArrayTest removeSelector: #testIndexOfDuplicate!FloatArrayTest removeSelector: #testIndexOfIfAbsent!FloatArrayTest removeSelector: #testIndexOfIfAbsentDuplicate!FloatArrayTest removeSelector: #testIndexOfStartingAt!FloatArrayTest removeSelector: #testIndexOfStartingAtDuplicate!FloatArrayTest removeSelector: #testIndexOfStartingAtIfAbsent!FloatArrayTest removeSelector: #testIndexOfSubCollectionStartingAt!FloatArrayTest removeSelector: #testIndexOfSubCollectionStartingAtIfAbsent!FloatArrayTest removeSelector: #testIntersectionBasic!FloatArrayTest removeSelector: #testIntersectionEmpty!FloatArrayTest removeSelector: #testIntersectionItself!FloatArrayTest removeSelector: #testIntersectionTwoSimilarElementsInIntersection!FloatArrayTest removeSelector: #testIsEmpty!FloatArrayTest removeSelector: #testIsEmptyOrNil!FloatArrayTest removeSelector: #testIsSorted!FloatArrayTest removeSelector: #testIsSortedBy!FloatArrayTest removeSelector: #testKeysAndValuesDo!FloatArrayTest removeSelector: #testKeysAndValuesDoEmpty!FloatArrayTest removeSelector: #testLast!FloatArrayTest removeSelector: #testLastIndexOf!FloatArrayTest removeSelector: #testLastIndexOfDuplicate!FloatArrayTest removeSelector: #testLastIndexOfIfAbsent!FloatArrayTest removeSelector: #testLastIndexOfIfAbsentDuplicate!FloatArrayTest removeSelector: #testLastIndexOfStartingAt!FloatArrayTest removeSelector: #testLastIndexOfStartingAtDuplicate!FloatArrayTest removeSelector: #testLastNElements!FloatArrayTest removeSelector: #testMiddle!FloatArrayTest removeSelector: #testNotEmpty!FloatArrayTest removeSelector: #testOFixtureReplacementSequencedTest!FloatArrayTest removeSelector: #testOfSize!FloatArrayTest removeSelector: #testPairsCollect!FloatArrayTest removeSelector: #testPairsDo!FloatArrayTest removeSelector: #testPrintElementsOn!FloatArrayTest removeSelector: #testPrintNameOn!FloatArrayTest removeSelector: #testPrintOn!FloatArrayTest removeSelector: #testPrintOnDelimiter!FloatArrayTest removeSelector: #testPrintOnDelimiterLast!FloatArrayTest removeSelector: #testReplaceAllWith!FloatArrayTest removeSelector: #testReplaceFromToWith!FloatArrayTest removeSelector: #testReplaceFromToWithStartingAt!FloatArrayTest removeSelector: #testReverse!FloatArrayTest removeSelector: #testReverseDo!FloatArrayTest removeSelector: #testReverseDoEmpty!FloatArrayTest removeSelector: #testReverseWithDo!FloatArrayTest removeSelector: #testReversed!FloatArrayTest removeSelector: #testShallowCopy!FloatArrayTest removeSelector: #testShallowCopyEmpty!FloatArrayTest removeSelector: #testShuffled!FloatArrayTest removeSelector: #testSort!FloatArrayTest removeSelector: #testSortUsingSortBlock!FloatArrayTest removeSelector: #testSorted!FloatArrayTest removeSelector: #testSortedUsingBlock!FloatArrayTest removeSelector: #testStoreOn!FloatArrayTest removeSelector: #testStreamContents!FloatArrayTest removeSelector: #testStreamContentsProtocol!FloatArrayTest removeSelector: #testStreamContentsSized!FloatArrayTest removeSelector: #testUnion!FloatArrayTest removeSelector: #testUnionOfEmpties!FloatArrayTest removeSelector: #testWith!FloatArrayTest removeSelector: #testWithAll!FloatArrayTest removeSelector: #testWithCollect!FloatArrayTest removeSelector: #testWithCollectError!FloatArrayTest removeSelector: #testWithDo!FloatArrayTest removeSelector: #testWithDoError!FloatArrayTest removeSelector: #testWithIndexCollect!FloatArrayTest removeSelector: #testWithIndexDo!FloatArrayTest removeSelector: #testWithWith!FloatArrayTest removeSelector: #testWithWithWith!FloatArrayTest removeSelector: #testWithWithWithWith!FloatArrayTest removeSelector: #testWithWithWithWithWith!FloatArrayTest removeSelector: #testsBeginsWith!FloatArrayTest removeSelector: #testsBeginsWithEmpty!FloatArrayTest removeSelector: #testsEndsWith!FloatArrayTest removeSelector: #testsEndsWithEmpty!FloatArrayTest removeSelector: #valueArray!CollectionRootTest subclass: #FloatArrayTest	uses: TCreationWithTest + TSequencedStructuralEqualityTest + TSequencedConcatenationTest + TSetArithmetic + TAsStringCommaAndDelimiterSequenceableTest + TPrintOnSequencedTest + TBeginsEndsWith + TCloneTest + (TConvertTest - {#testAsByteArray. #integerCollectionWithoutEqualElements}) + TConvertAsSortedTest + (TConvertAsSetForMultiplinessIdentityTest - {#testAsIdentitySetWithEqualsElements. #testAsIdentitySetWithIdentityEqualsElements}) + TCopyPartOfSequenceable + TCopyPartOfSequenceableForMultipliness + TCopySequenceableSameContents + TCopySequenceableWithOrWithoutSpecificElements + TCopySequenceableWithReplacement + TCopyTest + (TIncludesWithIdentityCheckTest - {#testIdentityIncludesNonSpecificComportement}) + (TIndexAccess - {#testIdentityIndexOf. #testIdentityIndexOfIAbsent}) + (TIndexAccessForMultipliness - {#testIdentityIndexOfIAbsentDuplicate. #testIdentityIndexOfDuplicate}) + TIterateSequencedReadableTest + TPutTest + TPutBasicTest + TReplacementSequencedTest + TSequencedElementAccessTest + TSortTest + TSubCollectionAccess	instanceVariableNames: 'nonEmpty5ElementsNoDuplicate empty elementNotIn elementTwiceIn collectionWithEqualElements nonEmpty1Element collectionWithSameAtEndAndBegining collectionWith1TimeSubcollection collectionWith2TimeSubcollection collectionNotIncluded nonEmptySubcollection elementInNonEmpty replacementCollectionSameSize sortedCollection'	classVariableNames: ''	poolDictionaries: ''	category: 'CollectionsTests-Arrayed'!!FloatArrayTest reorganize!('tests - copying with or without' testCopyWithoutFirst testCopyWithoutIndex testForceToPaddingStartWith testCopyWithFirst testForceToPaddingWith testCopyWithSequenceable)('tests - including with identity' testIdentityIncludes)(#'*Collections-arithmetic-testing' testArithmeticCoercion)('tests - copying with replacement' testCopyReplaceAllWithManyOccurence testCopyReplaceFromToWithInsertion testCopyReplaceFromToWith testCopyReplaceAllWith1Occurence firstIndexesOf:in:)('tests - concatenation' testConcatenationWithEmpty testConcatenation)('tests - at put' testAtPut testAtPutOutOfBounds testAtPutTwoValues)('tests - set arithmetic' testDifferenceWithNonNullIntersection testUnionOfEmpties testIntersectionItself numberOfSimilarElementsInIntersection testUnion testDifferenceWithSeparateCollection containsAll:of:andOf: testIntersectionEmpty testDifference testIntersectionBasic testIntersectionTwoSimilarElementsInIntersection)(#requirements moreThan4Elements newElement collectionWith2TimeSubcollection elementsCopyNonIdenticalWithoutEqualElements collectionMoreThan1NoDuplicates elementNotInForElementAccessing collectionWithCopyNonIdentical sizeCollection sortedInAscendingOrderCollection firstIndex collectionWith1TimeSubcollection elementNotIn indexInNonEmpty collectionNotIncluded nonEmptyMoreThan1Element elementNotInForIndexAccessing indexInForCollectionWithoutDuplicates anIndex elementInForReplacement withEqualElements collectionWithoutEqualElements collectionWithSortableElements collection collectionWithSameAtEndAndBegining collectionWithNonIdentitySameAtEndAndBegining anotherElementNotIn collectionWithIdentical subCollectionNotIn collectionWithCopy elementInForElementAccessing anotherElementOrAssociationIn collectionWithoutNilElements anotherValue secondCollection elementToAdd nonEmpty1Element anotherElementOrAssociationNotIn oldSubCollection moreThan3Elements replacementCollection elementInForIndexAccessing indexArray replacementCollectionSameSize firstCollection unsortedCollection empty valueArray collectionClass nonEmpty collectionMoreThan5Elements aValue collectionWithElementsToRemove secondIndex)('tests - copy' testCopySameClass testCopyNonEmptyWithoutNotIncluded testCopyEmptyWithout testCopyEmptyWith testCopyNonEmptyWith testCopyEmptyWithoutAll testCopyNonEmptyWithout testCopyNonEmptyWithoutAllNotIncluded testCopyNonEmptyWithoutAll testCopyEquals testCopyNotSame)('tests - subcollections access' testAllButFirst testAllButLastNElements testLastNElements testAllButFirstNElements testAllButLast testFirstNElements)('tests - printing' testPrintOnDelimiter testPrintOnDelimiterLast testStoreOn testPrintElementsOn testPrintNameOn testPrintOn)('tests - copying same contents' testShuffled testReversed testReverse testShallowCopy testShallowCopyEmpty)('tests - index access' testIndexOfStartingAtIfAbsent testLastIndexOfIfAbsent testLastIndexOfStartingAt testLastIndexOf testIndexOfStartingAt testIndexOfIfAbsent testIndexOfSubCollectionStartingAt testIndexOf testIndexOfSubCollectionStartingAtIfAbsent)('tests - sorting' testIsSortedBy testSortUsingSortBlock testSortedUsingBlock testSorted testSort testIsSorted)('tests - index accessing for multipliness' testIndexOfIfAbsentDuplicate testLastIndexOfDuplicate testLastIndexOfStartingAtDuplicate testLastIndexOfIfAbsentDuplicate testIndexOfDuplicate testIndexOfStartingAtDuplicate)('tests - streaming' testStreamContentsSized testStreamContents testStreamContentsProtocol)(#'tests - puting with indexes' testAtAllIndexesPut testAtAllPutAll testAtAllPut testAtLastPut testAtWrapPut testFromToPut testSwapWith)('tests - copying part of sequenceable for multipliness' testCopyAfterLastWithDuplicate testCopyUpToWithDuplicate testCopyUpToLastWithDuplicate testCopyAfterWithDuplicate)('tests - as set tests' testAsSetWithEqualsElements)('tests - as identity set' testAsIdentitySetWithoutIdentityEqualsElements)(#running setUp)('tests - iterate on sequenced reable collections' testReverseWithDo testKeysAndValuesDoEmpty testWithIndexCollect testFindFirst testPairsCollect testWithDoError testWithCollect testReverseDo testWithCollectError testFindFirstNotIn testCollectFromTo testFindLastNotIn testWithIndexDo testWithDo testDo testKeysAndValuesDo testFromToDo testAllButLastDo testAllButFirstDo testPairsDo testDetectSequenced testFindLast testReverseDoEmpty)('tests - copy - clone' testCopyEmpty testCopyNonEmpty testCopyCreatesNewObject)('tests - converting' testAsBag testAsOrderedCollection testAsSet testAsArray assertNonDuplicatedContents:whenConvertedTo: testAsIdentitySet assertSameContents:whenConvertedTo: assertNoDuplicates:whenConvertedTo:)('test - equality' testEqualSignIsTrueForNonIdenticalButEqualCollections testEqualSign testEqualSignOfIdenticalCollectionObjects testEqualSignIsTrueForEmptyButNonIdenticalCollections)('tests - fixture' test0FixtureCreationWithTest test0FixtureCopyWithOrWithoutSpecificElementsTest test0FixtureCopySameContentsTest test0FixtureTConvertAsSetForMultiplinessTest test0TSequencedStructuralEqualityTest test0FixtureAsStringCommaAndDelimiterTest test0FixtureSetAritmeticTest test0FixtureIterateSequencedReadableTest test0FixtureIncludeTest test0FixtureCopyWithReplacementTest howMany:in: test0FixtureBeginsEndsWithTest test0FixtureTConvertTest test0TStructuralEqualityTest test0FixtureCloneTest test0FixtureCopyPartOfForMultipliness test0FixtureIndexAccessFotMultipliness test0FixtureIndexAccessTest test0FixtureIncludeWithIdentityTest test0FixtureSequencedConcatenationTest testOFixtureReplacementSequencedTest test0FixtureSequencedElementAccessTest test0CopyTest test0FixturePrintTest test0FixturePutOneOrMoreElementsTest test0FixturePutTest test0FixtureCopyPartOfSequenceableTest test0FixtureAsSetForIdentityMultiplinessTest test0FixtureSubcollectionAccessTest test0FixtureConverAsSortedTest test0SortingArrayedTest)('tests - begins ends with' testsEndsWith testsBeginsWithEmpty testsEndsWithEmpty testsBeginsWith)(#testing testFloatArrayPluginPrimitiveAtPut testFloatArrayPluginPrimitiveAt)(#'tests - as sorted collection' testAsSortedArray testAsSortedCollection testAsSortedCollectionWithSortBlock)('tests - copying part of sequenceable' testCopyAfter testCopyUpToLastEmpty testCopyAfterEmpty testCopyUpToLast testCopyAfterLast testCopyFromTo testCopyAfterLastEmpty testCopyEmptyMethod testCopyUpToEmpty testCopyUpTo)('tests - element accessing' testAtWrap testAtRandom testLast testAtLast testAtPin testAtAll testAfterIfAbsent testAtOutOfBounds testAt testAtIfAbsent testAtLastIfAbsent testFirstSecondThird testMiddle testBefore testAtLastError testBeforeIfAbsent testAfter)('tests - includes' testIncludesElementIsThere testIncludesAnyAllThere testIncludesAllNoneThere testIncludesElementIsNotThere testIncludesAnyNoneThere)('tests - replacing' testReplaceFromToWith testReplaceFromToWithStartingAt testReplaceAllWith)('tests - equality' testEqualSignForSequenceableCollections testHasEqualElementsIsTrueForNonIdenticalButEqualCollections testHasEqualElementsOfIdenticalCollectionObjects testHasEqualElements)('test - creation' testWithWithWith testOfSize testWithWithWithWithWith testWith testWithAll testWithWith testWithWithWithWith)('tests - comma and delimiter' testAsCommaStringOne testAsStringOnDelimiterLastMore testAsStringOnDelimiterLastEmpty testAsCommaStringMore testAsCommaStringEmpty testAsStringOnDelimiterEmpty testAsStringOnDelimiterMore testAsStringOnDelimiterOne testAsStringOnDelimiterLastOne)!RBExplicitRequirementMethodsRule removeSelector: #resultClass!RBRepeteadMethodsInTheSuperclassRule removeSelector: #resultClass!NBExternalUnionFields removeSelector: #typeOf:!MorphicUIManager removeSelector: #abort:!MorphicUIManager removeSelector: #abort:title:!MorphicUIManager removeSelector: #alert:!MorphicUIManager removeSelector: #alert:title:!MorphicUIManager removeSelector: #alert:title:configure:!MorphicUIManager removeSelector: #centeredAlert:title:configure:!MorphicUIManager removeSelector: #chooseColor!MorphicUIManager removeSelector: #chooseColor:!MorphicUIManager removeSelector: #chooseColor:title:!MorphicUIManager removeSelector: #chooseDirectory:!MorphicUIManager removeSelector: #chooseDirectory:path:!MorphicUIManager removeSelector: #chooseDropList:list:!MorphicUIManager removeSelector: #chooseDropList:title:list:!MorphicUIManager removeSelector: #chooseFileName:extensions:path:preview:!MorphicUIManager removeSelector: #chooseFont!MorphicUIManager removeSelector: #chooseFont:!MorphicUIManager removeSelector: #deny:!MorphicUIManager removeSelector: #deny:title:!MorphicUIManager removeSelector: #fileOpen:!MorphicUIManager removeSelector: #fileOpen:extensions:!MorphicUIManager removeSelector: #fileOpen:extensions:path:!MorphicUIManager removeSelector: #fileOpen:extensions:path:preview:!MorphicUIManager removeSelector: #fileSave:!MorphicUIManager removeSelector: #fileSave:extensions:!MorphicUIManager removeSelector: #fileSave:extensions:path:!MorphicUIManager removeSelector: #fileSave:path:!MorphicUIManager removeSelector: #longMessage:title:!MorphicUIManager removeSelector: #message:!MorphicUIManager removeSelector: #message:title:!MorphicUIManager removeSelector: #newAlphaImage:help:!MorphicUIManager removeSelector: #newAlphaSelector:getAlpha:setAlpha:help:!MorphicUIManager removeSelector: #newAutoAcceptTextEditorFor:getText:setText:getEnabled:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:get:set:class:getEnabled:font:help:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:get:set:class:getEnabled:font:help:entryCompletion:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:get:set:class:getEnabled:help:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:get:set:class:getEnabled:help:entryCompletion:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:getText:setText:getEnabled:font:help:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:getText:setText:getEnabled:font:help:entryCompletion:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:getText:setText:getEnabled:help:!MorphicUIManager removeSelector: #newAutoAcceptTextEntryFor:getText:setText:getEnabled:help:entryCompletion:!MorphicUIManager removeSelector: #newBalloonHelp:for:!MorphicUIManager removeSelector: #newBalloonHelp:for:corner:!MorphicUIManager removeSelector: #newBasicTextEditorFor:getText:setText:!MorphicUIManager removeSelector: #newBasicTextEditorFor:getText:setText:getEnabled:!MorphicUIManager removeSelector: #newBasicTextEditorFor:getText:setText:getEnabled:menu:!MorphicUIManager removeSelector: #newBracketSliderFor:getValue:setValue:min:max:quantum:getEnabled:help:!MorphicUIManager removeSelector: #newBracketSliderFor:getValue:setValue:min:max:quantum:help:!MorphicUIManager removeSelector: #newButtonFor:action:getEnabled:label:help:!MorphicUIManager removeSelector: #newButtonFor:action:label:help:!MorphicUIManager removeSelector: #newButtonFor:getState:action:arguments:getEnabled:getLabel:help:!MorphicUIManager removeSelector: #newButtonFor:getState:action:arguments:getEnabled:label:help:!MorphicUIManager removeSelector: #newButtonFor:getState:action:arguments:getEnabled:labelForm:help:!MorphicUIManager removeSelector: #newButtonLabel:!MorphicUIManager removeSelector: #newButtonLabelFor:label:getEnabled:!MorphicUIManager removeSelector: #newCancelButton!MorphicUIManager removeSelector: #newCancelButtonFor:!MorphicUIManager removeSelector: #newCheckboxFor:getSelected:setSelected:getEnabled:getLabel:help:!MorphicUIManager removeSelector: #newCheckboxFor:getSelected:setSelected:getEnabled:label:help:!MorphicUIManager removeSelector: #newCheckboxFor:getSelected:setSelected:label:help:!MorphicUIManager removeSelector: #newCloseButton!MorphicUIManager removeSelector: #newCloseButtonFor:!MorphicUIManager removeSelector: #newCloseControlFor:action:help:!MorphicUIManager removeSelector: #newColorChooserFor:getColor:setColor:getEnabled:help:!MorphicUIManager removeSelector: #newColorChooserFor:getColor:setColor:help:!MorphicUIManager removeSelector: #newColorPresenterFor:getColor:help:!MorphicUIManager removeSelector: #newColumn:!MorphicUIManager removeSelector: #newDialogPanel!MorphicUIManager removeSelector: #newDropListFor:list:getSelected:setSelected:getEnabled:help:!MorphicUIManager removeSelector: #newDropListFor:list:getSelected:setSelected:getEnabled:useIndex:help:!MorphicUIManager removeSelector: #newDropListFor:list:getSelected:setSelected:help:!MorphicUIManager removeSelector: #newEditableDropListFor:list:getSelected:setSelected:addToList:class:default:ghostText:getEnabled:useIndex:help:!MorphicUIManager removeSelector: #newEditableDropListFor:list:getSelected:setSelected:addToList:ghostText:getEnabled:help:!MorphicUIManager removeSelector: #newEmbeddedMenu!MorphicUIManager removeSelector: #newExpander:!MorphicUIManager removeSelector: #newExpander:for:!MorphicUIManager removeSelector: #newExpander:forAll:!MorphicUIManager removeSelector: #newFuzzyLabel:!MorphicUIManager removeSelector: #newFuzzyLabelFor:label:getEnabled:!MorphicUIManager removeSelector: #newFuzzyLabelFor:label:offset:alpha:getEnabled:!MorphicUIManager removeSelector: #newGroupbox!MorphicUIManager removeSelector: #newGroupbox:!MorphicUIManager removeSelector: #newGroupbox:for:!MorphicUIManager removeSelector: #newGroupbox:forAll:!MorphicUIManager removeSelector: #newGroupboxFor:!MorphicUIManager removeSelector: #newGroupboxForAll:!MorphicUIManager removeSelector: #newHSVASelector:help:!MorphicUIManager removeSelector: #newHSVSelector:help:!MorphicUIManager removeSelector: #newHueSelector:getHue:setHue:help:!MorphicUIManager removeSelector: #newImage:!MorphicUIManager removeSelector: #newImage:size:!MorphicUIManager removeSelector: #newImageFor:get:help:!MorphicUIManager removeSelector: #newIncrementalSliderFor:getValue:setValue:min:max:quantum:getEnabled:help:!MorphicUIManager removeSelector: #newLabel:!MorphicUIManager removeSelector: #newLabelFor:getLabel:getEnabled:!MorphicUIManager removeSelector: #newLabelFor:label:getEnabled:!MorphicUIManager removeSelector: #newLabelGroup:!MorphicUIManager removeSelector: #newLabelGroup:font:labelColor:!MorphicUIManager removeSelector: #newListFor:list:selected:changeSelected:getEnabled:help:!MorphicUIManager removeSelector: #newListFor:list:selected:changeSelected:help:!MorphicUIManager removeSelector: #newListFor:list:selected:changeSelected:icon:getEnabled:help:!MorphicUIManager removeSelector: #newMenu!MorphicUIManager removeSelector: #newMenuFor:!MorphicUIManager removeSelector: #newMorphDropListFor:list:getSelected:setSelected:getEnabled:help:!MorphicUIManager removeSelector: #newMorphDropListFor:list:getSelected:setSelected:getEnabled:useIndex:help:!MorphicUIManager removeSelector: #newMorphDropListFor:list:getSelected:setSelected:help:!MorphicUIManager removeSelector: #newMorphListFor:list:getSelected:setSelected:getEnabled:help:!MorphicUIManager removeSelector: #newMorphListFor:list:getSelected:setSelected:help:!MorphicUIManager removeSelector: #newMultistateButton!MorphicUIManager removeSelector: #newNoButton!MorphicUIManager removeSelector: #newNoButtonFor:!MorphicUIManager removeSelector: #newOKButton!MorphicUIManager removeSelector: #newOKButtonFor:!MorphicUIManager removeSelector: #newOKButtonFor:getEnabled:!MorphicUIManager removeSelector: #newOverflowRowForAll:!MorphicUIManager removeSelector: #newPanel!MorphicUIManager removeSelector: #newPluggableDialogWindow!MorphicUIManager removeSelector: #newPluggableDialogWindow:!MorphicUIManager removeSelector: #newPluggableDialogWindow:for:!MorphicUIManager removeSelector: #newRadioButtonFor:getSelected:setSelected:getEnabled:label:help:!MorphicUIManager removeSelector: #newRadioButtonFor:getSelected:setSelected:label:help:!MorphicUIManager removeSelector: #newRow!MorphicUIManager removeSelector: #newRow:!MorphicUIManager removeSelector: #newSVSelector:help:!MorphicUIManager removeSelector: #newScrollPaneFor:!MorphicUIManager removeSelector: #newSeparator!MorphicUIManager removeSelector: #newSliderFor:getValue:setValue:getEnabled:help:!MorphicUIManager removeSelector: #newSliderFor:getValue:setValue:help:!MorphicUIManager removeSelector: #newSliderFor:getValue:setValue:min:max:quantum:getEnabled:help:!MorphicUIManager removeSelector: #newStack!MorphicUIManager removeSelector: #newStack:!MorphicUIManager removeSelector: #newString:!MorphicUIManager removeSelector: #newString:font:style:!MorphicUIManager removeSelector: #newString:style:!MorphicUIManager removeSelector: #newTabGroup:!MorphicUIManager removeSelector: #newText:!MorphicUIManager removeSelector: #newTextEditorFor:getText:setText:!MorphicUIManager removeSelector: #newTextEditorFor:getText:setText:getEnabled:!MorphicUIManager removeSelector: #newTextEditorFor:getText:setText:getEnabled:menu:!MorphicUIManager removeSelector: #newTextEntryFor:get:set:class:getEnabled:help:!MorphicUIManager removeSelector: #newTextEntryFor:getText:setText:getEnabled:help:!MorphicUIManager removeSelector: #newTextEntryFor:getText:setText:getEnabled:help:entryCompletion:!MorphicUIManager removeSelector: #newTextEntryFor:getText:setText:help:!MorphicUIManager removeSelector: #newTitle:for:!MorphicUIManager removeSelector: #newToolDockingBar!MorphicUIManager removeSelector: #newToolSpacer!MorphicUIManager removeSelector: #newToolbar!MorphicUIManager removeSelector: #newToolbar:!MorphicUIManager removeSelector: #newToolbarHandle!MorphicUIManager removeSelector: #newTreeFor:list:selected:changeSelected:!MorphicUIManager removeSelector: #newVerticalSeparator!MorphicUIManager removeSelector: #newWindowFor:title:!MorphicUIManager removeSelector: #newWorkArea!MorphicUIManager removeSelector: #newYesButton!MorphicUIManager removeSelector: #newYesButtonFor:!MorphicUIManager removeSelector: #proceed:!MorphicUIManager removeSelector: #proceed:title:!MorphicUIManager removeSelector: #question:!MorphicUIManager removeSelector: #question:title:!MorphicUIManager removeSelector: #questionWithoutCancel:!MorphicUIManager removeSelector: #questionWithoutCancel:title:!MorphicUIManager removeSelector: #textEntry:!MorphicUIManager removeSelector: #textEntry:title:!MorphicUIManager removeSelector: #textEntry:title:entryText:!MorphicUIManager removeSelector: #theme!UIManager subclass: #MorphicUIManager	uses: TEasilyThemed - {#theme}	instanceVariableNames: 'interactiveParser'	classVariableNames: 'UIProcess'	poolDictionaries: ''	category: 'Polymorph-Widgets-Themes'!!MorphicUIManager reorganize!(#private openPolymorphComparisonFrom:to:belongingTo:from:labeled:inWindowLabeled: deactivate activate openModal:)(#'ui process' spawnNewProcess terminateUIProcess resumeUIProcess: uiProcess defer: interruptName:preemptedProcess:)(#'ui requests' newMenuIn:for: onFontsChanged chooseDirectory:from: edit:label:accept: restoreDisplay chooseFileMatching:label: messageSet:inMorphicWindowLabeled: checkForNewDisplaySize lowSpaceWatcherDefaultAction: fileExistsDefaultAction: restoreDisplayAfter: confirm:orCancel: request:initialAnswer:centerAt: informUserDuring: currentWorld inform: messageNames:inMorphicWindowWithInitialSearchString: request:initialAnswer: chooseFullFileNameMatching:label: chooseFrom:values:lines:title: newDisplayDepthNoRestore: request:initialAnswer:title:entryCompletion: unhandledErrorDefaultAction: openComparisonFrom:to:belongingTo:from:labeled:inWindowLabeled: request:initialAnswer:entryCompletion: fileDoesNotExistsDefaultAction: request:initialAnswer:title: confirm:label: menuClass fontFromUser: chooseFrom:lines:title: syntaxErrorNotificationDefaultAction: warningDefaultAction: multiLineRequest:initialAnswer:answerHeight: confirm: requestPassword: explorer:for:withLabel: openDebuggerOn:context:label:contents:fullView:)(#'global state' world)(#accessing interactiveParser interactiveParser: preferredCornerStyle modalMorph)(#events onPrimitiveError: onSnapshot: onEventSensorStartup: onDebug:context:title:full:)(#services fileSave:extensions: chooseColor: chooseOrRequestFrom:values:lines:title: enterOrRequestFrom:values:lines:title: confirm:trueChoice:falseChoice:cancelChoice:default: chooseFileName:extensions:path:preview: alert: longMessage:title: questionWithoutCancel: chooseFullFileName:extensions:path:preview: enterOrRequestFrom:lines:title: fileSave:path: chooseDropList:list: message:title: chooseFont: question: question:title: chooseFrom:lines:message:title: chooseFont chooseOrRequestFrom:lines:title: chooseDirectory:path: confirm:trueChoice:falseChoice: chooseColor:title: alert:title: proceed: textEntry:title: deny:title: alert:title:configure: textEntry: fileOpen:extensions:path: deny: message: textEntry:title:entryText: fileOpen:extensions:path:preview: chooseFrom:values:lines:message:title: chooseColor abort:title: fileOpen:extensions: questionWithoutCancel:title: chooseDropList:title:list: proceed:title: abort: fileOpen: centeredAlert:title:configure: fileSave: chooseDirectory: fileSave:extensions:path:)(#settings interactiveParserFor:)('controls' newAutoAcceptTextEntryFor:getText:setText:getEnabled:font:help:entryCompletion: newTextEntryFor:getText:setText:help: newText: newBracketSliderFor:getValue:setValue:min:max:quantum:getEnabled:help: newAutoAcceptTextEntryFor:getText:setText:getEnabled:help: newSeparator newToolbarHandle newMorphListFor:list:getSelected:setSelected:help: newStack: newButtonLabelFor:label:getEnabled: newString:style: newDialogPanel newYesButtonFor: newBalloonHelp:for:corner: newSliderFor:getValue:setValue:getEnabled:help: newExpander:for: newColorChooserFor:getColor:setColor:help: newButtonFor:action:getEnabled:label:help: newRow: newBracketSliderFor:getValue:setValue:min:max:quantum:help: newCloseControlFor:action:help: newStack newCancelButtonFor: newButtonFor:getState:action:arguments:getEnabled:labelForm:help: newTextEntryFor:get:set:class:getEnabled:help: newGroupbox:forAll: newHSVSelector:help: newTextEditorFor:getText:setText:getEnabled:menu: newPluggableDialogWindow newOKButtonFor:getEnabled: newAutoAcceptTextEntryFor:getText:setText:getEnabled:font:help: newPluggableDialogWindow:for: newLabelGroup: newMorphDropListFor:list:getSelected:setSelected:getEnabled:help: newAutoAcceptTextEntryFor:get:set:class:getEnabled:help:entryCompletion: newLabelFor:label:getEnabled: newAutoAcceptTextEditorFor:getText:setText:getEnabled: newTextEditorFor:getText:setText:getEnabled: newTitle:for: newNoButton newRadioButtonFor:getSelected:setSelected:label:help: newHSVASelector:help: newRadioButtonFor:getSelected:setSelected:getEnabled:label:help: newWindowFor:title: newCloseButton newSliderFor:getValue:setValue:min:max:quantum:getEnabled:help: newGroupboxFor: newTextEntryFor:getText:setText:getEnabled:help:entryCompletion: newBasicTextEditorFor:getText:setText:getEnabled:menu: newSliderFor:getValue:setValue:help: newExpander: newGroupbox newIncrementalSliderFor:getValue:setValue:min:max:quantum:getEnabled:help: newToolSpacer newSVSelector:help: newFuzzyLabelFor:label:offset:alpha:getEnabled: newString: newRow newBalloonHelp:for: newLabel: newMenu newMultistateButton newGroupbox: newAutoAcceptTextEntryFor:get:set:class:getEnabled:font:help:entryCompletion: newWorkArea newDropListFor:list:getSelected:setSelected:getEnabled:help: newGroupbox:for: newToolbar: newColorPresenterFor:getColor:help: newMorphDropListFor:list:getSelected:setSelected:help: newListFor:list:selected:changeSelected:help: newYesButton newOKButtonFor: newNoButtonFor: newScrollPaneFor: newExpander:forAll: newImage: newCheckboxFor:getSelected:setSelected:label:help: newListFor:list:selected:changeSelected:icon:getEnabled:help: newEmbeddedMenu newDropListFor:list:getSelected:setSelected:getEnabled:useIndex:help: newFuzzyLabel: newCheckboxFor:getSelected:setSelected:getEnabled:label:help: newButtonFor:action:label:help: newBasicTextEditorFor:getText:setText:getEnabled: newButtonFor:getState:action:arguments:getEnabled:getLabel:help: newTabGroup: newAlphaImage:help: newListFor:list:selected:changeSelected:getEnabled:help: newAutoAcceptTextEntryFor:get:set:class:getEnabled:help: newOverflowRowForAll: newEditableDropListFor:list:getSelected:setSelected:addToList:class:default:ghostText:getEnabled:useIndex:help: newFuzzyLabelFor:label:getEnabled: newLabelFor:getLabel:getEnabled: newMorphDropListFor:list:getSelected:setSelected:getEnabled:useIndex:help: newTextEntryFor:getText:setText:getEnabled:help: newButtonFor:getState:action:arguments:getEnabled:label:help: newGroupboxForAll: newImageFor:get:help: newDropListFor:list:getSelected:setSelected:help: newAutoAcceptTextEntryFor:getText:setText:getEnabled:help:entryCompletion: newVerticalSeparator newCloseButtonFor: newMenuFor: newImage:size: newMorphListFor:list:getSelected:setSelected:getEnabled:help: newEditableDropListFor:list:getSelected:setSelected:addToList:ghostText:getEnabled:help: newHueSelector:getHue:setHue:help: newAlphaSelector:getAlpha:setAlpha:help: newPluggableDialogWindow: newToolbar newString:font:style: newAutoAcceptTextEntryFor:get:set:class:getEnabled:font:help: newLabelGroup:font:labelColor: newColumn: newColorChooserFor:getColor:setColor:getEnabled:help: newButtonLabel: newBasicTextEditorFor:getText:setText: newTextEditorFor:getText:setText: newTreeFor:list:selected:changeSelected: newCheckboxFor:getSelected:setSelected:getEnabled:getLabel:help: newToolDockingBar newOKButton newCancelButton newPanel)!SetTest removeSelector: #assertNoDuplicates:whenConvertedTo:!SetTest removeSelector: #assertNonDuplicatedContents:whenConvertedTo:!SetTest removeSelector: #assertSameContents:whenConvertedTo:!SetTest removeSelector: #containsAll:of:andOf:!SetTest removeSelector: #numberOfSimilarElementsInIntersection!SetTest removeSelector: #test0CopyTest!SetTest removeSelector: #test0FixtureAsStringCommaAndDelimiterTest!SetTest removeSelector: #test0FixtureCloneTest!SetTest removeSelector: #test0FixtureConcatenationTest!SetTest removeSelector: #test0FixtureConverAsSortedTest!SetTest removeSelector: #test0FixtureCreationWithTest!SetTest removeSelector: #test0FixtureIncludeTest!SetTest removeSelector: #test0FixtureIncludeWithIdentityTest!SetTest removeSelector: #test0FixtureOccurrencesTest!SetTest removeSelector: #test0FixturePrintTest!SetTest removeSelector: #test0FixtureRequirementsOfTGrowableTest!SetTest removeSelector: #test0FixtureSetAritmeticTest!SetTest removeSelector: #test0FixtureTConvertTest!SetTest removeSelector: #test0FixtureTRemoveTest!SetTest removeSelector: #test0TSizeTest!SetTest removeSelector: #test0TStructuralEqualityTest!SetTest removeSelector: #testAddAlreadyThereDoesNotCount!SetTest removeSelector: #testAsArray!SetTest removeSelector: #testAsBag!SetTest removeSelector: #testAsByteArray!SetTest removeSelector: #testAsCommaStringEmpty!SetTest removeSelector: #testAsCommaStringMore!SetTest removeSelector: #testAsCommaStringOne!SetTest removeSelector: #testAsIdentitySet!SetTest removeSelector: #testAsOrderedCollection!SetTest removeSelector: #testAsSortedCollection!SetTest removeSelector: #testAsSortedCollectionWithSortBlock!SetTest removeSelector: #testAsStringOnDelimiterEmpty!SetTest removeSelector: #testAsStringOnDelimiterLastEmpty!SetTest removeSelector: #testAsStringOnDelimiterLastMore!SetTest removeSelector: #testAsStringOnDelimiterLastOne!SetTest removeSelector: #testAsStringOnDelimiterMore!SetTest removeSelector: #testAsStringOnDelimiterOne!SetTest removeSelector: #testConcatenation!SetTest removeSelector: #testConcatenationWithDuplicate!SetTest removeSelector: #testConcatenationWithEmpty!SetTest removeSelector: #testCopyCreatesNewObject!SetTest removeSelector: #testCopyEmpty!SetTest removeSelector: #testCopyEquals!SetTest removeSelector: #testCopyNonEmpty!SetTest removeSelector: #testCopyNonEmptyWithout!SetTest removeSelector: #testCopyNotSame!SetTest removeSelector: #testCopySameClass!SetTest removeSelector: #testDifference!SetTest removeSelector: #testDifferenceWithNonNullIntersection!SetTest removeSelector: #testDifferenceWithSeparateCollection!SetTest removeSelector: #testEqualSign!SetTest removeSelector: #testEqualSignIsTrueForNonIdenticalButEqualCollections!SetTest removeSelector: #testEqualSignOfIdenticalCollectionObjects!SetTest removeSelector: #testIdentityIncludesNonSpecificComportement!SetTest removeSelector: #testIncludesAllNoneThere!SetTest removeSelector: #testIncludesAnyAllThere!SetTest removeSelector: #testIncludesAnyNoneThere!SetTest removeSelector: #testIncludesElementIsThere!SetTest removeSelector: #testIntersectionBasic!SetTest removeSelector: #testIntersectionEmpty!SetTest removeSelector: #testIntersectionItself!SetTest removeSelector: #testIntersectionTwoSimilarElementsInIntersection!SetTest removeSelector: #testOccurrencesOf!SetTest removeSelector: #testOccurrencesOfEmpty!SetTest removeSelector: #testOccurrencesOfNotIn!SetTest removeSelector: #testPrintElementsOn!SetTest removeSelector: #testPrintNameOn!SetTest removeSelector: #testPrintOn!SetTest removeSelector: #testPrintOnDelimiter!SetTest removeSelector: #testPrintOnDelimiterLast!SetTest removeSelector: #testRemoveAllSuchThat!SetTest removeSelector: #testRemoveElementFromEmpty!SetTest removeSelector: #testRemoveElementReallyRemovesElement!SetTest removeSelector: #testRemoveElementThatExists!SetTest removeSelector: #testSize!SetTest removeSelector: #testStoreOn!SetTest removeSelector: #testTAddIfNotPresentWithElementAlreadyIn!SetTest removeSelector: #testUnionOfEmpties!SetTest removeSelector: #testWith!SetTest removeSelector: #testWithAll!SetTest removeSelector: #testWithWith!SetTest removeSelector: #testWithWithWith!SetTest removeSelector: #testWithWithWithWith!SetTest removeSelector: #testWithWithWithWithWith!CollectionRootTest subclass: #SetTest	uses: TAddForUniquenessTest + TIncludesWithIdentityCheckTest + TCloneTest + TCopyTest + TRemoveTest + TGrowableTest + TStructuralEqualityTest + TPrintTest + TAsStringCommaAndDelimiterTest + TConvertTest + TConvertAsSortedTest + TConcatenationEqualElementsRemovedTest + TOccurrencesTest + (TCreationWithTest - {#testOfSize. #collectionClass}) + (TSetArithmetic - {#collectionClass})	instanceVariableNames: 'full empty collectResult emptyButAllocatedWith20 elementNotIn collectionOfFloat collectionIncluded nonEmpty1element withoutEqualElements collection5Elements collectionWith3Elements'	classVariableNames: ''	poolDictionaries: ''	category: 'CollectionsTests-Unordered'!!SetTest reorganize!(#initialize setUp)(#tests testRemoveAll)('tests - printing' testPrintOnDelimiter testStoreOn testPrintOn testPrintElementsOn testPrintNameOn testPrintOnDelimiterLast)(#'tests - adding uniquely' testAddNewElementIncrementsSize testAddAlreadyThereDoesNotCount testTAddIfNotPresentWithElementAlreadyIn testTAddIfNotPresentWithNewElement)('tests - copy - clone' testCopyEmpty testCopyCreatesNewObject testCopyNonEmpty)(#ambiguous elementNotIn)('tests - occurrencesOf' testOccurrencesOfNotIn testOccurrencesOf testOccurrencesOfEmpty)('test - creation' testWithWithWith testWithAll testWithWithWithWithWith testWith testWithWith testWithWithWithWith)('tests - concatenation' testConcatenationWithEmpty testConcatenation testConcatenationWithDuplicate)(#'tests - iterating' testCollect)(#'tests - fixture' test0FixtureIncludeTest test0FixturePrintTest test0CopyTest test0FixtureTRemoveTest test0FixtureCloneTest test0FixtureConcatenationTest test0TStructuralEqualityTest test0FixtureIncludeWithIdentityTest test0FixtureSetAritmeticTest test0FixtureConverAsSortedTest test0FixtureRequirementsOfTGrowableTest test0FixtureTConvertTest test0FixtureCreationWithTest test0FixtureOccurrencesTest test0FixtureAddForUniquenessTest test0FixtureAsStringCommaAndDelimiterTest)(#'tests - with nil' testAllowInclusionOfNils)('tests - set arithmetic' testUnionOfEmpties numberOfSimilarElementsInIntersection testIntersectionItself testDifferenceWithNonNullIntersection testDifferenceWithSeparateCollection containsAll:of:andOf: testIntersectionEmpty testDifference testIntersectionBasic testIntersectionTwoSimilarElementsInIntersection)(#'tests - empty' nonEmpty empty)(#coverage classToBeTested)(#'tests - size capacity' sizeCollection emptyButAllocatedWith20)(#'test - iterate' selectedNumber speciesClass testDoWithoutNoDuplicates expectedSizeAfterReject)(#'tests - remove' testRemoveAllError testRemoveElementFromEmpty testRemoveElementReallyRemovesElement testRemoveAllFoundIn testRemoveElementThatExists testRemoveAllSuchThat)(#'some tests' testRemoveIfAbsent testAddWithOccurences testAtRandom testCopy testAllSetsAreHealthy testDo2 testUnion testAsSet testCollect2 testCopyWithout testLike testSize2 testIntersection)('tests - as string comma delimiter sequenceable' testAsCommaStringOne testAsStringOnDelimiterLastMore testAsStringOnDelimiterLastEmpty testAsCommaStringMore testAsCommaStringEmpty testAsStringOnDelimiterEmpty testAsStringOnDelimiterMore testAsStringOnDelimiterLastOne testAsStringOnDelimiterOne)(#'tests - copy' testCopyNotSame testCopyNonEmptyWith testCopyEmptyWithout testCopyNonEmptyWithoutAllNotIncluded testCopySameClass testCopyNonEmptyWithoutAll testCopyEmptyWithoutAll testCopyEmptyWith testCopyNonEmptyWithoutNotIncluded testCopyNonEmptyWithout testCopyEquals)('test - equality' testEqualSignIsTrueForNonIdenticalButEqualCollections testEqualSignOfIdenticalCollectionObjects testEqualSign)(#'tests - includes' anotherElementNotIn testIncludesElementIsNotThere testIncludesAllNoneThere testIdentityIncludes elementNotInForOccurrences testIncludesElementIsThere testIncludesAnyNoneThere testIncludesAnyAllThere testIdentityIncludesNonSpecificComportement)(#'tests - as sorted collection' testAsSortedArray testAsSortedCollection testAsSortedCollectionWithSortBlock)(#'sunit original tests' testGrow testIncludes testRemove testOccurrences testIllegal testAdd)(#requirements secondCollection collectionWithoutElement firstCollection collectionWithElementsToRemove result nonEmpty1Element integerCollectionWithoutEqualElements collectionWithElement collectionOfFloat collectionWithCopyNonIdentical nonEmptyWithoutEqualElements collectionWithoutEqualElements collection collectionWithSortableElements collectionMoreThan5Elements anotherElementOrAssociationNotIn element collectionWithoutNilElements anotherElementOrAssociationIn collectionNotIncluded elementInForIncludesTest collectionInForIncluding)(#'tests - growable' testAddEmptyGrows testAddNonEmptyGrowsWhenNewElement)('tests - converting' testAsIdentitySet assertNonDuplicatedContents:whenConvertedTo: testAsOrderedCollection testAsArray assertNoDuplicates:whenConvertedTo: testAsByteArray assertSameContents:whenConvertedTo: testAsBag)(#'test - copy' elementToAdd)!RBLocalMethodsOfAClassNotInItsTraitComposition removeSelector: #resultClass!CircleMorph removeSelector: #forwardDirection!CircleMorph removeSelector: #forwardDirection:!CircleMorph removeSelector: #heading!CircleMorph removeSelector: #setDirectionFrom:!!CircleMorph reorganize!('parts bin' initialize)('geometry' extent: transformedBy: bounds:)('rotate scale and flex' rotationDegrees rotationDegrees: prepareForRotating prepareForScaling privateMoveBy:)('geometry etoy' rotationCenter: rotationCenter referencePosition)('menus' setRotationCenterFrom:)!SortedCollectionTest removeSelector: #assertNoDuplicates:whenConvertedTo:!SortedCollectionTest removeSelector: #assertNonDuplicatedContents:whenConvertedTo:!SortedCollectionTest removeSelector: #assertSameContents:whenConvertedTo:!SortedCollectionTest removeSelector: #containsAll:of:andOf:!SortedCollectionTest removeSelector: #numberOfSimilarElementsInIntersection!SortedCollectionTest removeSelector: #test0CopyTest!SortedCollectionTest removeSelector: #test0FixtureAsSetForIdentityMultiplinessTest!SortedCollectionTest removeSelector: #test0FixtureAsStringCommaAndDelimiterTest!SortedCollectionTest removeSelector: #test0FixtureBeginsEndsWithTest!SortedCollectionTest removeSelector: #test0FixtureConverAsSortedTest!SortedCollectionTest removeSelector: #test0FixtureCopyPartOfForMultipliness!SortedCollectionTest removeSelector: #test0FixtureCopyPartOfSequenceableTest!SortedCollectionTest removeSelector: #test0FixtureCopySameContentsTest!SortedCollectionTest removeSelector: #test0FixtureCopyWithOrWithoutSpecificElementsTest!SortedCollectionTest removeSelector: #test0FixtureCopyWithReplacementForSorted!SortedCollectionTest removeSelector: #test0FixtureCreationWithTest!SortedCollectionTest removeSelector: #test0FixtureEmptyTest!SortedCollectionTest removeSelector: #test0FixtureIncludeTest!SortedCollectionTest removeSelector: #test0FixtureIncludeWithIdentityTest!SortedCollectionTest removeSelector: #test0FixtureIndexAccessFotMultipliness!SortedCollectionTest removeSelector: #test0FixtureIterateSequencedReadableTest!SortedCollectionTest removeSelector: #test0FixtureOccurrencesForMultiplinessTest!SortedCollectionTest removeSelector: #test0FixtureOccurrencesTest!SortedCollectionTest removeSelector: #test0FixturePrintTest!SortedCollectionTest removeSelector: #test0FixtureRemoveByIndexTest!SortedCollectionTest removeSelector: #test0FixtureRequirementsOfTAddTest!SortedCollectionTest removeSelector: #test0FixtureSequencedElementAccessTest!SortedCollectionTest removeSelector: #test0FixtureSetAritmeticTest!SortedCollectionTest removeSelector: #test0FixtureSubcollectionAccessTest!SortedCollectionTest removeSelector: #test0FixtureTConvertTest!SortedCollectionTest removeSelector: #test0FixtureTRemoveTest!SortedCollectionTest removeSelector: #test0TSequencedStructuralEqualityTest!SortedCollectionTest removeSelector: #test0TStructuralEqualityTest!SortedCollectionTest removeSelector: #testAfter!SortedCollectionTest removeSelector: #testAfterIfAbsent!SortedCollectionTest removeSelector: #testAllButFirst!SortedCollectionTest removeSelector: #testAllButFirstDo!SortedCollectionTest removeSelector: #testAllButFirstNElements!SortedCollectionTest removeSelector: #testAllButLast!SortedCollectionTest removeSelector: #testAllButLastDo!SortedCollectionTest removeSelector: #testAllButLastNElements!SortedCollectionTest removeSelector: #testAsArray!SortedCollectionTest removeSelector: #testAsBag!SortedCollectionTest removeSelector: #testAsByteArray!SortedCollectionTest removeSelector: #testAsCommaStringEmpty!SortedCollectionTest removeSelector: #testAsCommaStringMore!SortedCollectionTest removeSelector: #testAsCommaStringOne!SortedCollectionTest removeSelector: #testAsIdentitySet!SortedCollectionTest removeSelector: #testAsIdentitySetWithEqualsElements!SortedCollectionTest removeSelector: #testAsIdentitySetWithIdentityEqualsElements!SortedCollectionTest removeSelector: #testAsIdentitySetWithoutIdentityEqualsElements!SortedCollectionTest removeSelector: #testAsOrderedCollection!SortedCollectionTest removeSelector: #testAsSet!SortedCollectionTest removeSelector: #testAsSetWithEqualsElements!SortedCollectionTest removeSelector: #testAsSortedCollection!SortedCollectionTest removeSelector: #testAsSortedCollectionWithSortBlock!SortedCollectionTest removeSelector: #testAsStringOnDelimiterEmpty!SortedCollectionTest removeSelector: #testAsStringOnDelimiterLastEmpty!SortedCollectionTest removeSelector: #testAsStringOnDelimiterLastMore!SortedCollectionTest removeSelector: #testAsStringOnDelimiterLastOne!SortedCollectionTest removeSelector: #testAsStringOnDelimiterMore!SortedCollectionTest removeSelector: #testAsStringOnDelimiterOne!SortedCollectionTest removeSelector: #testAt!SortedCollectionTest removeSelector: #testAtIfAbsent!SortedCollectionTest removeSelector: #testAtLast!SortedCollectionTest removeSelector: #testAtLastError!SortedCollectionTest removeSelector: #testAtLastIfAbsent!SortedCollectionTest removeSelector: #testAtOutOfBounds!SortedCollectionTest removeSelector: #testAtPin!SortedCollectionTest removeSelector: #testAtRandom!SortedCollectionTest removeSelector: #testAtWrap!SortedCollectionTest removeSelector: #testBefore!SortedCollectionTest removeSelector: #testBeforeIfAbsent!SortedCollectionTest removeSelector: #testCollectFromTo!SortedCollectionTest removeSelector: #testCopyAfter!SortedCollectionTest removeSelector: #testCopyAfterEmpty!SortedCollectionTest removeSelector: #testCopyAfterLast!SortedCollectionTest removeSelector: #testCopyAfterLastEmpty!SortedCollectionTest removeSelector: #testCopyAfterLastWithDuplicate!SortedCollectionTest removeSelector: #testCopyAfterWithDuplicate!SortedCollectionTest removeSelector: #testCopyEmptyMethod!SortedCollectionTest removeSelector: #testCopyEmptyWith!SortedCollectionTest removeSelector: #testCopyEmptyWithout!SortedCollectionTest removeSelector: #testCopyEmptyWithoutAll!SortedCollectionTest removeSelector: #testCopyEquals!SortedCollectionTest removeSelector: #testCopyFromTo!SortedCollectionTest removeSelector: #testCopyFromToWithForSorted!SortedCollectionTest removeSelector: #testCopyNonEmptyWith!SortedCollectionTest removeSelector: #testCopyNonEmptyWithout!SortedCollectionTest removeSelector: #testCopyNonEmptyWithoutAll!SortedCollectionTest removeSelector: #testCopyNonEmptyWithoutAllNotIncluded!SortedCollectionTest removeSelector: #testCopyNonEmptyWithoutNotIncluded!SortedCollectionTest removeSelector: #testCopyNotSame!SortedCollectionTest removeSelector: #testCopyReplaceAllWithForSorted!SortedCollectionTest removeSelector: #testCopySameClass!SortedCollectionTest removeSelector: #testCopyUpTo!SortedCollectionTest removeSelector: #testCopyUpToEmpty!SortedCollectionTest removeSelector: #testCopyUpToLast!SortedCollectionTest removeSelector: #testCopyUpToLastEmpty!SortedCollectionTest removeSelector: #testCopyUpToLastWithDuplicate!SortedCollectionTest removeSelector: #testCopyUpToWithDuplicate!SortedCollectionTest removeSelector: #testCopyWithSequenceable!SortedCollectionTest removeSelector: #testCopyWithoutFirst!SortedCollectionTest removeSelector: #testDetectSequenced!SortedCollectionTest removeSelector: #testDifference!SortedCollectionTest removeSelector: #testDifferenceWithNonNullIntersection!SortedCollectionTest removeSelector: #testDifferenceWithSeparateCollection!SortedCollectionTest removeSelector: #testDo!SortedCollectionTest removeSelector: #testEqualSign!SortedCollectionTest removeSelector: #testEqualSignForSequenceableCollections!SortedCollectionTest removeSelector: #testEqualSignIsTrueForEmptyButNonIdenticalCollections!SortedCollectionTest removeSelector: #testEqualSignIsTrueForNonIdenticalButEqualCollections!SortedCollectionTest removeSelector: #testEqualSignOfIdenticalCollectionObjects!SortedCollectionTest removeSelector: #testFindFirst!SortedCollectionTest removeSelector: #testFindFirstNotIn!SortedCollectionTest removeSelector: #testFindLast!SortedCollectionTest removeSelector: #testFindLastNotIn!SortedCollectionTest removeSelector: #testFirstNElements!SortedCollectionTest removeSelector: #testFirstSecondThird!SortedCollectionTest removeSelector: #testFromToDo!SortedCollectionTest removeSelector: #testHasEqualElements!SortedCollectionTest removeSelector: #testHasEqualElementsIsTrueForNonIdenticalButEqualCollections!SortedCollectionTest removeSelector: #testHasEqualElementsOfIdenticalCollectionObjects!SortedCollectionTest removeSelector: #testIdentityIncludesNonSpecificComportement!SortedCollectionTest removeSelector: #testIdentityIndexOfDuplicate!SortedCollectionTest removeSelector: #testIdentityIndexOfIAbsentDuplicate!SortedCollectionTest removeSelector: #testIfEmpty!SortedCollectionTest removeSelector: #testIfEmptyifNotEmpty!SortedCollectionTest removeSelector: #testIfEmptyifNotEmptyDo!SortedCollectionTest removeSelector: #testIfNotEmpty!SortedCollectionTest removeSelector: #testIfNotEmptyDo!SortedCollectionTest removeSelector: #testIfNotEmptyDoifNotEmpty!SortedCollectionTest removeSelector: #testIfNotEmptyifEmpty!SortedCollectionTest removeSelector: #testIncludesAllNoneThere!SortedCollectionTest removeSelector: #testIncludesAnyAllThere!SortedCollectionTest removeSelector: #testIncludesAnyNoneThere!SortedCollectionTest removeSelector: #testIncludesElementIsNotThere!SortedCollectionTest removeSelector: #testIncludesElementIsThere!SortedCollectionTest removeSelector: #testIndexOfDuplicate!SortedCollectionTest removeSelector: #testIndexOfIfAbsentDuplicate!SortedCollectionTest removeSelector: #testIndexOfStartingAtDuplicate!SortedCollectionTest removeSelector: #testIntersectionBasic!SortedCollectionTest removeSelector: #testIntersectionEmpty!SortedCollectionTest removeSelector: #testIntersectionItself!SortedCollectionTest removeSelector: #testIntersectionTwoSimilarElementsInIntersection!SortedCollectionTest removeSelector: #testIsEmpty!SortedCollectionTest removeSelector: #testIsEmptyOrNil!SortedCollectionTest removeSelector: #testKeysAndValuesDo!SortedCollectionTest removeSelector: #testKeysAndValuesDoEmpty!SortedCollectionTest removeSelector: #testLast!SortedCollectionTest removeSelector: #testLastIndexOfDuplicate!SortedCollectionTest removeSelector: #testLastIndexOfIfAbsentDuplicate!SortedCollectionTest removeSelector: #testLastIndexOfStartingAtDuplicate!SortedCollectionTest removeSelector: #testLastNElements!SortedCollectionTest removeSelector: #testMiddle!SortedCollectionTest removeSelector: #testNotEmpty!SortedCollectionTest removeSelector: #testOccurrencesOf!SortedCollectionTest removeSelector: #testOccurrencesOfEmpty!SortedCollectionTest removeSelector: #testOccurrencesOfForMultipliness!SortedCollectionTest removeSelector: #testOccurrencesOfNotIn!SortedCollectionTest removeSelector: #testOfSize!SortedCollectionTest removeSelector: #testPairsCollect!SortedCollectionTest removeSelector: #testPairsDo!SortedCollectionTest removeSelector: #testPrintElementsOn!SortedCollectionTest removeSelector: #testPrintNameOn!SortedCollectionTest removeSelector: #testPrintOn!SortedCollectionTest removeSelector: #testPrintOnDelimiter!SortedCollectionTest removeSelector: #testPrintOnDelimiterLast!SortedCollectionTest removeSelector: #testRemoveAllSuchThat!SortedCollectionTest removeSelector: #testRemoveAt!SortedCollectionTest removeSelector: #testRemoveAtNotPresent!SortedCollectionTest removeSelector: #testRemoveElementFromEmpty!SortedCollectionTest removeSelector: #testRemoveElementReallyRemovesElement!SortedCollectionTest removeSelector: #testRemoveElementThatExists!SortedCollectionTest removeSelector: #testRemoveFirst!SortedCollectionTest removeSelector: #testRemoveFirstNElements!SortedCollectionTest removeSelector: #testRemoveFirstNElementsNotPresent!SortedCollectionTest removeSelector: #testRemoveFirstNotPresent!SortedCollectionTest removeSelector: #testRemoveIfAbsent!SortedCollectionTest removeSelector: #testRemoveLast!SortedCollectionTest removeSelector: #testRemoveLastNElements!SortedCollectionTest removeSelector: #testRemoveLastNElementsNElements!SortedCollectionTest removeSelector: #testRemoveLastNotPresent!SortedCollectionTest removeSelector: #testReverse!SortedCollectionTest removeSelector: #testReverseDo!SortedCollectionTest removeSelector: #testReverseDoEmpty!SortedCollectionTest removeSelector: #testReverseWithDo!SortedCollectionTest removeSelector: #testReversed!SortedCollectionTest removeSelector: #testShallowCopy!SortedCollectionTest removeSelector: #testShallowCopyEmpty!SortedCollectionTest removeSelector: #testStoreOn!SortedCollectionTest removeSelector: #testTAdd!SortedCollectionTest removeSelector: #testTAddAll!SortedCollectionTest removeSelector: #testTAddIfNotPresentWithElementAlreadyIn!SortedCollectionTest removeSelector: #testTAddIfNotPresentWithNewElement!SortedCollectionTest removeSelector: #testTAddTwice!SortedCollectionTest removeSelector: #testTAddWithOccurences!SortedCollectionTest removeSelector: #testTWrite!SortedCollectionTest removeSelector: #testTWriteTwice!SortedCollectionTest removeSelector: #testUnion!SortedCollectionTest removeSelector: #testUnionOfEmpties!SortedCollectionTest removeSelector: #testWith!SortedCollectionTest removeSelector: #testWithAll!SortedCollectionTest removeSelector: #testWithCollect!SortedCollectionTest removeSelector: #testWithCollectError!SortedCollectionTest removeSelector: #testWithDo!SortedCollectionTest removeSelector: #testWithDoError!SortedCollectionTest removeSelector: #testWithIndexCollect!SortedCollectionTest removeSelector: #testWithIndexDo!SortedCollectionTest removeSelector: #testWithWith!SortedCollectionTest removeSelector: #testWithWithWith!SortedCollectionTest removeSelector: #testWithWithWithWith!SortedCollectionTest removeSelector: #testWithWithWithWithWith!SortedCollectionTest removeSelector: #testsBeginsWith!SortedCollectionTest removeSelector: #testsBeginsWithEmpty!SortedCollectionTest removeSelector: #testsEndsWith!SortedCollectionTest removeSelector: #testsEndsWithEmpty!CollectionRootTest subclass: #SortedCollectionTest	uses: TIterateSequencedReadableTest + TPrintOnSequencedTest + TAsStringCommaAndDelimiterSequenceableTest + TIncludesWithIdentityCheckTest + (TSequencedElementAccessTest - {#testAtAll}) + TSubCollectionAccess + TIndexAccessForMultipliness + TRemoveTest + TConvertTest + TConvertAsSetForMultiplinessIdentityTest + TAddTest + TBeginsEndsWith + (TCopySequenceableSameContents - {#testShuffled}) + TSetArithmetic + TRemoveByIndexTest + TCopyPartOfSequenceable + TCopyPartOfSequenceableForMultipliness + (TCopySequenceableWithOrWithoutSpecificElements - {#testForceToPaddingStartWith. #testForceToPaddingWith. #testCopyWithFirst. #testCopyWithoutIndex}) + TCopySequenceableWithReplacementForSorted + TCopyTest + TConvertAsSortedTest + TSequencedStructuralEqualityTest + TCreationWithTest + TOccurrencesForMultiplinessTest	instanceVariableNames: 'nonEmpty elementExistsTwice empty collectResult nonEmpty1Element collectionOfFloat accessCollection elementNoteIn oldSubcollection floatCollectionSameEndAndBegining withoutEqualElements collectionOfFloatWithDuplicate collectionIncluded collectionNotIncluded collectionWithoutNil duplicateFloat nonEmpty5Elements collectionWith4Elements'	classVariableNames: ''	poolDictionaries: ''	category: 'CollectionsTests-Unordered'!!SortedCollectionTest reorganize!('tests - subcollections access' testAllButFirst testAllButLastNElements testLastNElements testAllButFirstNElements testAllButLast testFirstNElements)('tests - printing' testPrintOnDelimiter testPrintOnDelimiterLast testStoreOn testPrintElementsOn testPrintNameOn testPrintOn)(#requirements empty otherCollection result collectionWithoutEqualElements collection collectionWithSameAtEndAndBegining element collectionWithEqualElements expectedSizeAfterReject integerCollectionWithoutEqualElements withEqualElements elementNotIn replacementCollection collectionWithSortableElements collectionOfSize5 collectionWithNonIdentitySameAtEndAndBegining floatCollectionWithSameAtEndAndBegining elementInForIncludesTest collectionWith5Elements collectionWithElement elementNotInForIndexAccessing elementNotInForElementAccessing collectionWithoutNilElements collectionOfFloat elementInCollectionOfFloat sizeCollection elementInForIndexAccessing anotherElementOrAssociationNotIn collectionWith1TimeSubcollection anotherElementOrAssociationIn collectionWithCopy elementToAdd collectionWithElementsToRemove anotherElementNotIn nonEmpty1Element collectionMoreThan5Elements nonEmptyWithoutEqualElements elementsCopyNonIdenticalWithoutEqualElements oldSubCollection integerCollection moreThan4Elements elementTwiceInForOccurrences nonEmpty elementInForElementAccessing collectionWithCopyNonIdentical indexInNonEmpty speciesClass indexInForCollectionWithoutDuplicates subCollectionNotIn collectionNotIncluded collectionWithIdentical moreThan3Elements collectionMoreThan1NoDuplicates accessCollection collectionWith2TimeSubcollection collectionClass elementNotInForOccurrences nonEmptyMoreThan1Element)(#'tests - as sorted collection' testAsSortedArray testAsSortedCollection testAsSortedCollectionWithSortBlock)(#'test - iterate' testDo2)(#basic testSpeciesLooseSortBlock testSortBlock testCreation testSort testCopy testMedian testCollect testAdd testAddAll2 testAddAll testRemoveAll testEquals)('tests - equality' testEqualSignForSequenceableCollections testHasEqualElementsIsTrueForNonIdenticalButEqualCollections testHasEqualElementsOfIdenticalCollectionObjects testHasEqualElements)('tests - converting' testAsBag testAsOrderedCollection testAsByteArray testAsSet testAsArray assertNonDuplicatedContents:whenConvertedTo: testAsIdentitySet assertSameContents:whenConvertedTo: assertNoDuplicates:whenConvertedTo:)(#'tests - includes' testIdentityIncludesNonSpecificComportement testIdentityIncludes testIncludesAnyAllThere testIncludesAnyNoneThere testIncludesElementIsNotThere testIncludesElementIsThere testIncludesAllNoneThere)('test - equality' testEqualSignIsTrueForNonIdenticalButEqualCollections testEqualSign testEqualSignOfIdenticalCollectionObjects testEqualSignIsTrueForEmptyButNonIdenticalCollections)('tests - copying with or without' testCopyWithSequenceable testCopyWithoutFirst)('test - creation' testWithWithWith testOfSize testWithWithWithWithWith testWith testWithAll testWithWith testWithWithWithWith)('tests - element accessing' testAtWrap testAtRandom testLast testAtLast testAtPin testAfterIfAbsent testAtOutOfBounds testAtLastIfAbsent testAtIfAbsent testAt testFirstSecondThird testMiddle testBefore testAtLastError testBeforeIfAbsent testAfter)('tests - occurrencesOf' testOccurrencesOfNotIn testOccurrencesOf testOccurrencesOfEmpty)('tests - removing by index' testRemoveAt testRemoveLastNElementsNElements testRemoveFirstNotPresent testRemoveLast testRemoveAtNotPresent testRemoveFirstNElements testRemoveFirstNElementsNotPresent testRemoveLastNotPresent testRemoveFirst testRemoveLastNElements)('tests - occurrencesOf for multipliness' testOccurrencesOfForMultipliness)('tests - as identity set' testAsIdentitySetWithIdentityEqualsElements testAsIdentitySetWithoutIdentityEqualsElements)('tests - copying with replacement for sorted' testCopyFromToWithForSorted testCopyReplaceAllWithForSorted)('tests - set arithmetic' testDifferenceWithNonNullIntersection testUnionOfEmpties testIntersectionItself numberOfSimilarElementsInIntersection testUnion testDifferenceWithSeparateCollection containsAll:of:andOf: testIntersectionEmpty testDifference testIntersectionBasic testIntersectionTwoSimilarElementsInIntersection)('tests - index accessing for multipliness' testIndexOfIfAbsentDuplicate testLastIndexOfDuplicate testLastIndexOfStartingAtDuplicate testIdentityIndexOfDuplicate testIdentityIndexOfIAbsentDuplicate testIndexOfDuplicate testLastIndexOfIfAbsentDuplicate testIndexOfStartingAtDuplicate)('tests - copy' testCopySameClass testCopyNonEmptyWithoutNotIncluded testCopyEmptyWithout testCopyEmptyWith testCopyNonEmptyWith testCopyEmptyWithoutAll testCopyNonEmptyWithout testCopyNonEmptyWithoutAllNotIncluded testCopyNonEmptyWithoutAll testCopyEquals testCopyNotSame)(#'tests - remove' testRemoveAllError testRemoveElementFromEmpty testRemoveIfAbsent testRemoveAllFoundIn testRemoveElementThatExists testRemoveElementReallyRemovesElement testRemoveAllSuchThat)('tests - adding' testTWriteTwice testTAddIfNotPresentWithNewElement testTAdd testTAddWithOccurences testTAddIfNotPresentWithElementAlreadyIn testTWrite testTAddTwice testTAddAll)('tests - as set tests' testAsSetWithEqualsElements testAsIdentitySetWithEqualsElements)(#'tests - index access' testIndexOfIfAbsent testIndexOf testIdentityIndexOfIAbsent testIndexOfStartingAt testLastIndexOf testLastIndexOfStartingAt testIdentityIndexOf testLastIndexOfIfAbsent testIndexOfSubCollectionStartingAt testIndexOfSubCollectionStartingAtIfAbsent)('tests - copying part of sequenceable for multipliness' testCopyAfterLastWithDuplicate testCopyUpToWithDuplicate testCopyUpToLastWithDuplicate testCopyAfterWithDuplicate)('tests - copying same contents' testShallowCopy testShallowCopyEmpty testReverse testReversed)('tests - copying part of sequenceable' testCopyAfter testCopyUpToLastEmpty testCopyAfterEmpty testCopyUpToLast testCopyAfterLast testCopyFromTo testCopyAfterLastEmpty testCopyEmptyMethod testCopyUpToEmpty testCopyUpTo)('tests - begins ends with' testsEndsWith testsBeginsWithEmpty testsEndsWithEmpty testsBeginsWith)(#setup setUp)('tests - comma and delimiter' testAsCommaStringOne testAsStringOnDelimiterLastMore testAsStringOnDelimiterLastEmpty testAsCommaStringMore testAsCommaStringEmpty testAsStringOnDelimiterEmpty testAsStringOnDelimiterMore testAsStringOnDelimiterOne testAsStringOnDelimiterLastOne)(#'tests - fixture' test0FixtureCopySameContentsTest test0FixtureAsSetForIdentityMultiplinessTest test0FixtureSequencedElementAccessTest test0FixtureAsStringCommaAndDelimiterTest test0FixtureCopyWithReplacementForSorted test0FixtureTConvertTest test0FixtureTRemoveTest test0FixtureSetAritmeticTest test0FixtureCopyPartOfForMultipliness test0FixtureSubcollectionAccessTest test0FixtureCopyWithOrWithoutSpecificElementsTest test0FixtureRequirementsOfTAddTest test0FixtureRemoveByIndexTest test0FixtureTConvertAsSetForMultiplinessTest test0TSequencedStructuralEqualityTest test0FixtureOccurrencesTest test0FixtureOccurrencesForMultiplinessTest test0FixturePrintTest test0CopyTest test0FixtureIncludeTest test0FixtureIndexAccessFotMultipliness test0FixtureIterateSequencedReadableTest test0FixtureCopyPartOfSequenceableTest test0FixtureConverAsSortedTest test0FixtureBeginsEndsWithTest test0FixtureCreationWithTest test0TStructuralEqualityTest test0FixtureIncludeWithIdentityTest)('tests - iterate on sequenced reable collections' testReverseWithDo testKeysAndValuesDoEmpty testWithIndexCollect testFindFirst testPairsCollect testWithDoError testWithCollect testReverseDo testWithCollectError testFindFirstNotIn testCollectFromTo testFindLastNotIn testWithIndexDo testWithDo testDo testKeysAndValuesDo testFromToDo testAllButLastDo testAllButFirstDo testPairsDo testDetectSequenced testFindLast testReverseDoEmpty)!